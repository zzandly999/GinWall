<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.atzz.mine.mapper.UserRegistersMapper">
  <resultMap id="BaseResultMap" type="com.atzz.mine.bean.UserRegisters">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="deleted_at" jdbcType="TIMESTAMP" property="deletedAt" />
    <result column="mobile" jdbcType="CHAR" property="mobile" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="student_number" jdbcType="CHAR" property="studentNumber" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="sex" jdbcType="TINYINT" property="sex" />
    <result column="constellation" jdbcType="VARCHAR" property="constellation" />
    <result column="role" jdbcType="VARCHAR" property="role" />
    <result column="authentication_token" jdbcType="VARCHAR" property="authenticationToken" />
    <result column="email_authentication" jdbcType="VARCHAR" property="emailAuthentication" />
    <result column="binning_time" jdbcType="VARCHAR" property="binningTime" />
    <result column="is_real" jdbcType="TINYINT" property="isReal" />
    <result column="admin_id" jdbcType="BIGINT" property="adminId" />
  </resultMap>
<!--  新增-->
  <resultMap id="WithDyResultMap" type="com.atzz.mine.bean.UserRegisters">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="deleted_at" jdbcType="TIMESTAMP" property="deletedAt" />
    <result column="mobile" jdbcType="CHAR" property="mobile" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="student_number" jdbcType="CHAR" property="studentNumber" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="sex" jdbcType="TINYINT" property="sex" />
    <result column="constellation" jdbcType="VARCHAR" property="constellation" />
    <result column="role" jdbcType="VARCHAR" property="role" />
    <result column="authentication_token" jdbcType="VARCHAR" property="authenticationToken" />
    <result column="email_authentication" jdbcType="VARCHAR" property="emailAuthentication" />
    <result column="binning_time" jdbcType="VARCHAR" property="binningTime" />
    <result column="is_real" jdbcType="TINYINT" property="isReal" />
    <result column="admin_id" jdbcType="BIGINT" property="adminId" />
    <association property="dynamicInformations" javaType="com.atzz.mine.bean.DynamicInformations">
      <id column="id" jdbcType="BIGINT" property="id" />
      <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
      <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
      <result column="deleted_at" jdbcType="TIMESTAMP" property="deletedAt" />
      <result column="like" jdbcType="BIGINT" property="like" />
      <result column="un_like" jdbcType="BIGINT" property="unLike" />
      <result column="number_floor" jdbcType="BIGINT" property="numberFloor" />
      <result column="url" jdbcType="VARCHAR" property="url" />
      <result column="type" jdbcType="VARCHAR" property="type" />
      <result column="is_real" jdbcType="TINYINT" property="isReal" />
      <result column="admin_id" jdbcType="BIGINT" property="adminId" />
      <result column="report" jdbcType="TINYINT" property="report" />
      <result column="comment" jdbcType="VARCHAR" property="comment" />
      <result column="cover" jdbcType="VARCHAR" property="cover" />
      <result column="user_register_id" jdbcType="BIGINT" property="userRegisterId" />
    </association>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, create_time, update_time, deleted_at, mobile, nick_name, avatar, student_number, 
    email, password, sex, constellation, `role`, authentication_token, email_authentication,
    binning_time, is_real, admin_id
  </sql>
  <select id="selectByExample" parameterType="com.atzz.mine.bean.UserRegistersExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_registers
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
<!--  新增-->
  <select id="selectCommentsByNickname" resultMap="WithDyResultMap">
    select
      *
    from dynamic_informations as d left join user_registers as u on d.user_register_id = u.id
    where u.nick_name = #{nickName,jdbcType=VARCHAR}
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_registers
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user_registers
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.atzz.mine.bean.UserRegistersExample">
    delete from user_registers
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.atzz.mine.bean.UserRegisters">
    insert into user_registers (id, create_time, update_time, 
      deleted_at, mobile, nick_name, 
      avatar, student_number, email, 
      password, sex, constellation, 
      role, authentication_token, email_authentication, 
      binning_time, is_real, admin_id
      )
    values (#{id,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{deletedAt,jdbcType=TIMESTAMP}, #{mobile,jdbcType=CHAR}, #{nickName,jdbcType=VARCHAR}, 
      #{avatar,jdbcType=VARCHAR}, #{studentNumber,jdbcType=CHAR}, #{email,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{sex,jdbcType=TINYINT}, #{constellation,jdbcType=VARCHAR}, 
      #{role,jdbcType=VARCHAR}, #{authenticationToken,jdbcType=VARCHAR}, #{emailAuthentication,jdbcType=VARCHAR}, 
      #{binningTime,jdbcType=VARCHAR}, #{isReal,jdbcType=TINYINT}, #{adminId,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.atzz.mine.bean.UserRegisters">
    insert into user_registers
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deletedAt != null">
        deleted_at,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
      <if test="studentNumber != null">
        student_number,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="constellation != null">
        constellation,
      </if>
      <if test="role != null">
        role,
      </if>
      <if test="authenticationToken != null">
        authentication_token,
      </if>
      <if test="emailAuthentication != null">
        email_authentication,
      </if>
      <if test="binningTime != null">
        binning_time,
      </if>
      <if test="isReal != null">
        is_real,
      </if>
      <if test="adminId != null">
        admin_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deletedAt != null">
        #{deletedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=CHAR},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="studentNumber != null">
        #{studentNumber,jdbcType=CHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=TINYINT},
      </if>
      <if test="constellation != null">
        #{constellation,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        #{role,jdbcType=VARCHAR},
      </if>
      <if test="authenticationToken != null">
        #{authenticationToken,jdbcType=VARCHAR},
      </if>
      <if test="emailAuthentication != null">
        #{emailAuthentication,jdbcType=VARCHAR},
      </if>
      <if test="binningTime != null">
        #{binningTime,jdbcType=VARCHAR},
      </if>
      <if test="isReal != null">
        #{isReal,jdbcType=TINYINT},
      </if>
      <if test="adminId != null">
        #{adminId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.atzz.mine.bean.UserRegistersExample" resultType="java.lang.Long">
    select count(*) from user_registers
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user_registers
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deletedAt != null">
        deleted_at = #{record.deletedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=CHAR},
      </if>
      <if test="record.nickName != null">
        nick_name = #{record.nickName,jdbcType=VARCHAR},
      </if>
      <if test="record.avatar != null">
        avatar = #{record.avatar,jdbcType=VARCHAR},
      </if>
      <if test="record.studentNumber != null">
        student_number = #{record.studentNumber,jdbcType=CHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=TINYINT},
      </if>
      <if test="record.constellation != null">
        constellation = #{record.constellation,jdbcType=VARCHAR},
      </if>
      <if test="record.role != null">
        role = #{record.role,jdbcType=VARCHAR},
      </if>
      <if test="record.authenticationToken != null">
        authentication_token = #{record.authenticationToken,jdbcType=VARCHAR},
      </if>
      <if test="record.emailAuthentication != null">
        email_authentication = #{record.emailAuthentication,jdbcType=VARCHAR},
      </if>
      <if test="record.binningTime != null">
        binning_time = #{record.binningTime,jdbcType=VARCHAR},
      </if>
      <if test="record.isReal != null">
        is_real = #{record.isReal,jdbcType=TINYINT},
      </if>
      <if test="record.adminId != null">
        admin_id = #{record.adminId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user_registers
    set id = #{record.id,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      deleted_at = #{record.deletedAt,jdbcType=TIMESTAMP},
      mobile = #{record.mobile,jdbcType=CHAR},
      nick_name = #{record.nickName,jdbcType=VARCHAR},
      avatar = #{record.avatar,jdbcType=VARCHAR},
      student_number = #{record.studentNumber,jdbcType=CHAR},
      email = #{record.email,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=TINYINT},
      constellation = #{record.constellation,jdbcType=VARCHAR},
      role = #{record.role,jdbcType=VARCHAR},
      authentication_token = #{record.authenticationToken,jdbcType=VARCHAR},
      email_authentication = #{record.emailAuthentication,jdbcType=VARCHAR},
      binning_time = #{record.binningTime,jdbcType=VARCHAR},
      is_real = #{record.isReal,jdbcType=TINYINT},
      admin_id = #{record.adminId,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.atzz.mine.bean.UserRegisters">
    update user_registers
    <set>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deletedAt != null">
        deleted_at = #{deletedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=CHAR},
      </if>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="studentNumber != null">
        student_number = #{studentNumber,jdbcType=CHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=TINYINT},
      </if>
      <if test="constellation != null">
        constellation = #{constellation,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        role = #{role,jdbcType=VARCHAR},
      </if>
      <if test="authenticationToken != null">
        authentication_token = #{authenticationToken,jdbcType=VARCHAR},
      </if>
      <if test="emailAuthentication != null">
        email_authentication = #{emailAuthentication,jdbcType=VARCHAR},
      </if>
      <if test="binningTime != null">
        binning_time = #{binningTime,jdbcType=VARCHAR},
      </if>
      <if test="isReal != null">
        is_real = #{isReal,jdbcType=TINYINT},
      </if>
      <if test="adminId != null">
        admin_id = #{adminId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.atzz.mine.bean.UserRegisters">
    update user_registers
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      deleted_at = #{deletedAt,jdbcType=TIMESTAMP},
      mobile = #{mobile,jdbcType=CHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      student_number = #{studentNumber,jdbcType=CHAR},
      email = #{email,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=TINYINT},
      constellation = #{constellation,jdbcType=VARCHAR},
      role = #{role,jdbcType=VARCHAR},
      authentication_token = #{authenticationToken,jdbcType=VARCHAR},
      email_authentication = #{emailAuthentication,jdbcType=VARCHAR},
      binning_time = #{binningTime,jdbcType=VARCHAR},
      is_real = #{isReal,jdbcType=TINYINT},
      admin_id = #{adminId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>